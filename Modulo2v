local module = {}

if not game:IsLoaded() then
    game.Loaded:Wait()
end

print("V12")

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local SoundService = game:GetService("SoundService")

local request = http_request or request or syn and syn.request or http and http.request
if not request then warn("Request not available") end

local cloneref = cloneref or function(obj) return obj end

local coreGui = (gethui and gethui()) or game:GetService("CoreGui")

 function protectGui(gui)
    if syn and syn.protect_gui then
        syn.protect_gui(gui)
    elseif protectgui then
        protectgui(gui)
    end
end
 function addCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius)
    corner.Parent = instance
end

 function protectAncestry(gui)
    gui.AncestryChanged:Connect(function(_, parent)
        if not parent then
            gui.Parent = coreGui
        end
    end)
end

local theme = {
    redondoContenedor = 5,
    TransparenciaContenedordelElementos = 0.5,
    TamanoContenedor = UDim2.new(1, 0, 0, 45),
    TransparenciaContenedor = 0.4,
    FrameContenedor = Color3.fromRGB(100, 0, 10),
    bordes = Color3.fromRGB(120, 20, 30),
    bordecuadro = Color3.fromRGB(160, 30, 40),
    main = Color3.fromRGB(200, 50, 45),
    ColorContenedordelElementos = Color3.fromRGB(230, 90, 90),
    textcolor = Color3.fromRGB(230, 240, 255)
}

local sizeW, sizeH = 590, 300

local deluxeUrl = "https://raw.githubusercontent.com/CapybaraScript/Deluxe-list/refs/heads/main/Deluxe"

function module:getDeluxeList()
    local ok, res = pcall(function()
        return request({Url = deluxeUrl, Method = "GET"})
    end)
    if not (ok and res and res.Body) then
        warn("Failed to fetch deluxe list")
        return {}
    end

    local func, err = loadstring(res.Body)
    if not func then
        warn("Failed to load deluxe list: " .. tostring(err))
        return {}
    end

    local ok2, list = pcall(func)
    if not ok2 or type(list) ~= "table" then
        warn("Failed to execute deluxe list")
        return {}
    end

    return list
end

local function protectedFunction(func)
    return newcclosure(function(...)
        if not checkcaller() then return end
        return func(...)
    end)
end

local http = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local folderName = "CapybaraScriptsConfigs"
local fileName = "CapybaraScriptsHubConfig.json"
local fullPath = folderName .. "/" .. fileName

if not (writefile and readfile and isfile and delfile and makefolder and isfolder and http and http.JSONEncode and http.JSONDecode) then
    warn("[ConfigCheck] Executor missing required functions.")
    return
end

if not isfolder(folderName) then
    local ok, res = pcall(function() makefolder(folderName) end)
    if not ok then return end
end

getgenv().configFileName = fullPath

getgenv().saveConfig = function(stateTable)
    pcall(function()
        writefile(getgenv().configFileName, http:JSONEncode(stateTable))
    end)
end

getgenv().loadConfig = function()
    if isfile(getgenv().configFileName) then
        local ok, data = pcall(function()
            return http:JSONDecode(readfile(getgenv().configFileName))
        end)
        if ok and type(data) == "table" then
            return data
        end
    end
    return {}
end

getgenv().savedConfig = getgenv().loadConfig()

getgenv().deleteConfig = function()
    if isfile(getgenv().configFileName) then
        pcall(function() delfile(getgenv().configFileName) end)
    end
end

function module:CreateUI(title, description, allowedUserIds)
    self.allowedUserIds = allowedUserIds or {}

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "FoundationOverlay" .. tostring(math.random(1,9999))
    ScreenGui.Parent = coreGui

    protectGui(ScreenGui)
    protectAncestry(ScreenGui)

    local Sound = Instance.new("Sound", SoundService)
    Sound.SoundId = "rbxassetid://9120129807"
    Sound:Play()

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, sizeW, 0, sizeH)
    MainFrame.Position = UDim2.new(0.5, -sizeW / 2, 0.5, -sizeH / 2 - 30)
    MainFrame.BackgroundColor3 = theme.ColorContenedordelElementos
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.BackgroundTransparency = 0.6
    addCorner(MainFrame, 7)

    protectAncestry(MainFrame)
    local protectedFrame = cloneref(MainFrame)

    self.DoSomething = protectedFunction(function()
        print("Función interna protegida ejecutada")
    end)

    local TopBar = Instance.new("Frame")
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = theme.bordes
    TopBar.BorderSizePixel = 0
    TopBar.BackgroundTransparency = 0.3
    TopBar.ZIndex = 10
    TopBar.Parent = MainFrame
    addCorner(TopBar, 5)

    local ResizeButton = Instance.new("TextButton", MainFrame)
    ResizeButton.Size = UDim2.new(0, 20, 0, 20)
    ResizeButton.Position = UDim2.new(1, -20, 1, -20)
    ResizeButton.AnchorPoint = Vector2.new(0, 0)
    ResizeButton.ZIndex = 15
    ResizeButton.BackgroundTransparency = 0.6
    ResizeButton.BackgroundColor3 = theme.ColorContenedordelElementos
    ResizeButton.Text = ""
    ResizeButton.TextSize = 14
    ResizeButton.Font = Enum.Font.Code
    ResizeButton.TextColor3 = theme.textcolor
    ResizeButton.BorderSizePixel = 0
    ResizeButton.AutoButtonColor = false

    local dragging = false
    local startPos
    local startSize

    local UserInputService = game:GetService("UserInputService")

    local function beginDrag(input)
        dragging = true
        startPos = input.Position
        startSize = MainFrame.Size

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end

    ResizeButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            beginDrag(input)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - startPos
            MainFrame.Size = UDim2.new(
                startSize.X.Scale, math.max(100, startSize.X.Offset + delta.X),
                startSize.Y.Scale, math.max(100, startSize.Y.Offset + delta.Y)
            )
        end
    end)

    local BO = Instance.new("Frame")
    BO.Size = UDim2.new(1, 0, 1, 0)
    BO.Position = UDim2.new(0, 0, 0, 0)
    BO.ZIndex = 18
    BO.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    BO.BackgroundTransparency = 0.4
    BO.Parent = MainFrame
    BO.Visible = false
    addCorner(BO, 8)

    local confirmationFrame = Instance.new("Frame")
    confirmationFrame.Size = UDim2.new(0, 300, 0, 300)
    confirmationFrame.Position = UDim2.new(0.5, -150, 0.5, -150)
    confirmationFrame.BackgroundColor3 = theme.FrameContenedor
    confirmationFrame.BackgroundTransparency = 0.4
    confirmationFrame.Parent = BO
    confirmationFrame.ZIndex = 19
    addCorner(confirmationFrame, 7)

    local confirmationLabel = Instance.new("TextLabel")
    confirmationLabel.Text = "Settings on the menu"
    confirmationLabel.TextSize = 12
    confirmationLabel.TextColor3 = theme.textcolor
    confirmationLabel.BackgroundTransparency = 1
    confirmationLabel.Size = UDim2.new(1, 0, 0, 30)
    confirmationLabel.ZIndex = 20
    confirmationLabel.Parent = confirmationFrame

    local separator = Instance.new("Frame")
    separator.Size = UDim2.new(1, -20, 0, 1)
    separator.Position = UDim2.new(0, 10, 0, 30)
    separator.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    separator.BorderSizePixel = 0
    separator.ZIndex = 20
    separator.Parent = confirmationFrame

    local settingsScroll = Instance.new("ScrollingFrame")
    settingsScroll.Size = UDim2.new(1, -10, 1, -40)
    settingsScroll.Position = UDim2.new(0, 5, 0, 40)
    settingsScroll.BackgroundTransparency = 1
    settingsScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    settingsScroll.ScrollBarThickness = 5
    settingsScroll.Parent = confirmationFrame

    local settingsLayout = Instance.new("UIListLayout")
    settingsLayout.Padding = UDim.new(0, 8)
    settingsLayout.Parent = settingsScroll

    settingsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        settingsScroll.CanvasSize = UDim2.new(0, 0, 0, settingsLayout.AbsoluteContentSize.Y)
    end)

    local DestroyGUIButton = Instance.new("TextButton")
    DestroyGUIButton.Size = UDim2.new(0, 26, 0, 27)
    DestroyGUIButton.Position = UDim2.new(1, -70, 0, 0)
    DestroyGUIButton.BackgroundTransparency = 0.5
    DestroyGUIButton.BackgroundColor3 = theme.bordecuadro
    DestroyGUIButton.Text = "X"
    DestroyGUIButton.ZIndex = 30
    DestroyGUIButton.TextSize = 23
    DestroyGUIButton.TextColor3 = theme.textcolor
    DestroyGUIButton.Font = Enum.Font.FredokaOne
    DestroyGUIButton.Parent = TopBar

    local confi = Instance.new("TextButton")
    confi.Size = UDim2.new(0, 26, 0, 27)
    confi.Position = UDim2.new(1, -35, 0, 0)
    confi.BackgroundTransparency = 0.5
    confi.BackgroundColor3 = theme.bordecuadro
    confi.Text = "⚙️"
    confi.ZIndex = 30
    confi.TextSize = 16
    confi.TextColor3 = Color3.fromRGB(255, 100, 100)
    confi.Font = Enum.Font.FredokaOne
    confi.Parent = TopBar

    addCorner(confi, 6)
    addCorner(DestroyGUIButton, 6)

    local CONOV = Instance.new("Frame")
    CONOV.Size = UDim2.new(1, 0, 1, 0)
    CONOV.Position = UDim2.new(0, 0, 0, 0)
    CONOV.ZIndex = 18
    CONOV.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    CONOV.BackgroundTransparency = 0.4
    CONOV.Parent = MainFrame
    CONOV.Visible = false

    local CONW = Instance.new("Frame")
    CONW.Size = UDim2.new(0, 300, 0, 150)
    CONW.Position = UDim2.new(0.5, -150, 0.5, -75)
    CONW.BackgroundColor3 = theme.FrameContenedor
    CONW.BackgroundTransparency = 0.4
    CONW.Parent = CONOV
    CONW.ZIndex = 19
    addCorner(CONW, 7)

    local ConT = Instance.new("TextLabel")
    ConT.Text = "Are you sure you want to Destroy the GUI?"
    ConT.TextSize = 10
    ConT.TextColor3 = theme.textcolor
    ConT.BackgroundTransparency = 1
    ConT.Size = UDim2.new(1, 0, 0, 50)
    ConT.ZIndex = 20
    ConT.Parent = CONW

    local CONDB = Instance.new("TextButton")
    CONDB.Text = "Yeah"
    CONDB.ZIndex = 20
    CONDB.TextSize = 16
    CONDB.TextColor3 = theme.textcolor
    CONDB.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    CONDB.Size = UDim2.new(0.5, -10, 0, 40)
    CONDB.Position = UDim2.new(0, 5, 1, -45)
    CONDB.Parent = CONW
    addCorner(CONDB, 4)

    local CDB = Instance.new("TextButton")
    CDB.Text = "No"
    CDB.TextSize = 16
    CDB.ZIndex = 20
    CDB.TextColor3 = theme.textcolor
    CDB.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    CDB.Size = UDim2.new(0.5, -10, 0, 40)
    CDB.Position = UDim2.new(0.5, 5, 1, -45)
    CDB.Parent = CONW
    addCorner(CDB, 4)

    DestroyGUIButton.MouseButton1Click:Connect(function()
        CONOV.Visible = true
    end)

    CONDB.MouseButton1Click:Connect(function()
        MainFrame:Destroy()
    end)

    CDB.MouseButton1Click:Connect(function()
        CONOV.Visible = false
    end)

     function updateAllColors()
        MainFrame.BackgroundColor3 = theme.ColorContenedordelElementos
        TopBar.BackgroundColor3 = theme.bordes
        border.Color = theme.bordes
        
        for _, v in ipairs(MainFrame:GetDescendants()) do
            if v:IsA("Frame") and v.BackgroundColor3 == theme.FrameContenedor then
                v.BackgroundColor3 = theme.FrameContenedor
            elseif v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("TextBox") then
                if v.TextColor3 == theme.textcolor then
                    v.TextColor3 = theme.textcolor
                end
            elseif v:IsA("UIStroke") then
                if v.Color == theme.bordes then
                    v.Color = theme.bordes
                end
            end
        end
    end 

local UserInputService = game:GetService("UserInputService")

 function createColorPicker(parent, labelText, targetColor, callback)
    local pickerFrame = Instance.new("Frame")
    pickerFrame.Size = UDim2.new(1, 0, 0, 30)
    pickerFrame.BackgroundTransparency = 1
    pickerFrame.ZIndex = 90
    pickerFrame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.5, -5, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = labelText  
    label.TextSize = 13
    label.Font = Enum.Font.FredokaOne
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextColor3 = theme.textcolor
    label.ZIndex = 90
    label.BackgroundTransparency = 1
    label.Parent = pickerFrame

    local preview = Instance.new("Frame")
    preview.Size = UDim2.new(0.5, 0, 0.8, 0)
    preview.Position = UDim2.new(0.5, 0, 0.1, 0)
    preview.BackgroundColor3 = targetColor
    preview.BorderSizePixel = 0
    preview.BackgroundTransparency = 0.5
    preview.ZIndex = 91
    preview.Parent = pickerFrame
    addCorner(preview, 4)

    local pickerButton = Instance.new("TextButton")
    pickerButton.Size = UDim2.new(1, 0, 1, 0)
    pickerButton.BackgroundTransparency = 1
    pickerButton.Text = ""
    pickerButton.ZIndex = 92
    pickerButton.Parent = pickerFrame

    pickerButton.MouseButton1Click:Connect(function()
        local colorPicker = Instance.new("Frame")
        colorPicker.Size = UDim2.new(0, 200, 0, 200)
        colorPicker.Position = UDim2.new(0.5, -100, 0.5, -100)
        colorPicker.BackgroundColor3 = theme.FrameContenedor
        colorPicker.BackgroundTransparency = 0.5
        colorPicker.BorderSizePixel = 0
        colorPicker.ZIndex = 100
        colorPicker.Parent = MainFrame
        addCorner(colorPicker, 6)

        local colorWheel = Instance.new("ImageLabel")
        colorWheel.Size = UDim2.new(0, 180, 0, 180)
        colorWheel.Position = UDim2.new(0.5, -90, 0.5, -90)
        colorWheel.Image = "rbxassetid://6020299385"
        colorWheel.BackgroundTransparency = 1
        colorWheel.ZIndex = 100
        colorWheel.Parent = colorPicker

        local selector = Instance.new("Frame")
        selector.Size = UDim2.new(0, 10, 0, 10)
        selector.BackgroundColor3 = Color3.new(1, 1, 1)
        selector.BorderSizePixel = 2
        selector.BorderColor3 = Color3.new(0, 0, 0)
        selector.ZIndex = 101
        selector.Parent = colorWheel

         function updateColor(pos)
            local rel = colorWheel.AbsolutePosition
            local size = colorWheel.AbsoluteSize
            local x = math.clamp((pos.X - rel.X) / size.X, 0, 1)
            local y = math.clamp((pos.Y - rel.Y) / size.Y, 0, 1)
            selector.Position = UDim2.new(x, -5, y, -5)
            local selected = Color3.fromHSV(x, 1 - y, 1)
            preview.BackgroundColor3 = selected
            callback(selected)
        end

        colorWheel.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        updateColor(input.Position)
        local moveConn
        moveConn = UserInputService.InputChanged:Connect(function(moveInput)
            if moveInput.UserInputType == Enum.UserInputType.MouseMovement or moveInput.UserInputType == Enum.UserInputType.Touch then
                updateColor(moveInput.Position)
            end
        end)
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                if moveConn then moveConn:Disconnect() end
            end
        end)
    end
end)

        local closeBtn = Instance.new("TextButton")
        closeBtn.Size = UDim2.new(0, 30, 0, 30)
        closeBtn.Position = UDim2.new(1, -30, 0, 0)
        closeBtn.Text = "X"
        closeBtn.TextSize = 14
        closeBtn.TextColor3 = theme.textcolor
        closeBtn.BackgroundTransparency = 1
        closeBtn.ZIndex = 101
        closeBtn.Parent = colorPicker

        closeBtn.MouseButton1Click:Connect(function()
            colorPicker:Destroy()
        end)
    end)
end

    createColorPicker(settingsScroll, "Menu Background", theme.ColorContenedordelElementos, function(newColor)
        theme.ColorContenedordelElementos = newColor
        updateAllColors()
    end)

    createColorPicker(settingsScroll, "Borders", theme.bordes, function(newColor)
        theme.bordes = newColor
        updateAllColors()
    end)

    createColorPicker(settingsScroll, "Main Color", theme.main, function(newColor)
        theme.main = newColor
        updateAllColors()
    end)

    createColorPicker(settingsScroll, "Text Color", theme.textcolor, function(newColor)
        theme.textcolor = newColor
        updateAllColors()
    end)

    confi.MouseButton1Click:Connect(function()
        local sonido = Instance.new("Sound")
        sonido.SoundId = "rbxassetid://17208399163"
        sonido.Volume = 0.5
        sonido.PlayOnRemove = true
        sonido.Parent = confi
        sonido:Destroy()
        BO.Visible = not BO.Visible
    end)

    local border = Instance.new("UIStroke")
    border.Parent = MainFrame
    border.Thickness = 2
    border.Color = theme.bordes
    border.Transparency = 0.5

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FoundationOverlay"
    screenGui.Parent = coreGui

    local button = Instance.new("ImageButton")
    local UICorner = Instance.new("UICorner")
    local clickSound = Instance.new("Sound")

    button.Name = "Button"
    button.Size = UDim2.new(0, 40, 0, 40)
    button.Position = UDim2.new(0.14, -64, 0.1, 34)
    button.Image = "rbxthumb://type=Asset&id=93060775454762&w=150&h=150"
    button.BackgroundTransparency = 0.7
    button.Draggable = true
    button.BorderSizePixel = 0
    button.BackgroundColor3 = theme.bordes
    button.Parent = screenGui

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.Position = UDim2.new(0, 0, 0, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = button.ZIndex + 1
    borderFrame.Parent = button

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame
    addCorner(borderFrame, theme.redondoContenedor)

    UICorner.CornerRadius = UDim.new(0, 6)
    UICorner.Parent = button

    clickSound.SoundId = "rbxassetid://10066968815"
    clickSound.Parent = button

    local TweenService = game:GetService("TweenService")
    local isActive = true
    local originalPos = MainFrame.Position

     function toggleButton()
        isActive = not isActive
        clickSound:Play()

        button:TweenSize(UDim2.new(0, 65, 0, 55), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        task.wait(0.2)
        button:TweenSize(UDim2.new(0, 40, 0, 40), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
        button.BackgroundTransparency = 0.3
        task.delay(2, function()
            button.BackgroundTransparency = 0.8
        end)

        if isActive then
            MainFrame.Position = UDim2.new(originalPos.X.Scale, originalPos.X.Offset, 1.2, 0)
            MainFrame.Visible = true
            TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                Position = originalPos
            }):Play()
        else
            TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                Position = UDim2.new(originalPos.X.Scale, originalPos.X.Offset, 1.2, 0)
            }):Play()
            task.delay(0.3, function()
                MainFrame.Visible = false
            end)
        end
    end

    button.MouseButton1Click:Connect(toggleButton)

    UserInputService.InputBegan:Connect(function(input, processed)
        if not processed and input.KeyCode == Enum.KeyCode.LeftControl then
            toggleButton()
        end
    end)

    local Line = Instance.new("Frame")
    Line.Size = UDim2.new(1, 0, 0, 2)
    Line.Position = UDim2.new(0, 0, 0, 30)
    Line.BackgroundColor3 = theme.bordes
    Line.BorderSizePixel = 0
    Line.ZIndex = 12
    Line.Parent = TopBar

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(0, 150, 1, 0)
    TitleLabel.Position = UDim2.new(0, 5, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.ZIndex = 11
    TitleLabel.TextSize = 16
    TitleLabel.TextColor3 = theme.textcolor
    TitleLabel.Font = Enum.Font.FredokaOne
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TopBar

    local DescriptionLabel = Instance.new("TextLabel")
    DescriptionLabel.Size = UDim2.new(0, 100, 1, 0)
    DescriptionLabel.Position = UDim2.new(1, -220, 0, 0)
    DescriptionLabel.BackgroundTransparency = 1
    DescriptionLabel.Text = description
    DescriptionLabel.TextSize = 14
    DescriptionLabel.ZIndex = 11
    DescriptionLabel.TextColor3 = theme.textcolor
    DescriptionLabel.Font = Enum.Font.FredokaOne
    DescriptionLabel.TextXAlignment = Enum.TextXAlignment.Left
    DescriptionLabel.Parent = TopBar

    local TabsContainer = Instance.new("ScrollingFrame")
    TabsContainer.Size = UDim2.new(0.3, 0, 1, -33)
    TabsContainer.Position = UDim2.new(0, 0, 0, 33)
    TabsContainer.BackgroundColor3 = Color3.fromRGB(0, 140, 0)
    TabsContainer.BorderSizePixel = 0
    TabsContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabsContainer.ScrollBarThickness = 0
    TabsContainer.Parent = MainFrame
    TabsContainer.BackgroundTransparency = 1
    addCorner(TabsContainer, 5)

    local TabsListLayout = Instance.new("UIListLayout")
    TabsListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabsListLayout.Padding = UDim.new(0, 8)
    TabsListLayout.Parent = TabsContainer
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 4)
    padding.PaddingRight = UDim.new(0, 4)
    padding.Parent = TabsContainer

    TabsListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabsContainer.CanvasSize = UDim2.new(0, 0, 0, TabsListLayout.AbsoluteContentSize.Y)
    end)

    local Container = Instance.new("Frame")
    Container.Size = UDim2.new(0.7, 0, 1, -30)
    Container.Position = UDim2.new(0.3, 0, 0, 30)
    Container.BackgroundColor3 = Color3.fromRGB(0.1, 140, 0)
    Container.BorderSizePixel = 0
    Container.Parent = MainFrame
    Container.BackgroundTransparency = 1
    addCorner(Container, 5)

    local allowedUserIds = getDeluxeList()
    local player = game.Players.LocalPlayer

     function isPlayerDeluxe(plr)
        for _, id in ipairs(allowedUserIds) do
            if plr.UserId == id then
                return true
            end
        end
        return false
    end

    print("Local player data")
    print("Name:", player.Name)
    print("UserId:", player.UserId)
    print("Is on the deluxe list?", isPlayerDeluxe(player) and "Yes!" or "No")

    if isPlayerDeluxe(player) then
        print(player.Name .. " has deluxe access")
    else
        print(player.Name .. " does not have deluxe access")
    end

local TweenService = game:GetService("TweenService")

local Tab = {TabsContainer = TabsContainer, Container = Container}

function Tab:AddTab(requireDeluxe, imageId, tabName, imageColor)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, -10, 0, 40)
    tabButton.Text = ""
    tabButton.Font = Enum.Font.FredokaOne
    tabButton.TextSize = 15
    tabButton.BackgroundColor3 = theme.main
    tabButton.TextColor3 = theme.textcolor
    tabButton.BackgroundTransparency = theme.TransparenciaContenedor
    tabButton.Parent = self.TabsContainer

    local textColor = theme.textcolor
    if requireDeluxe then
        textColor = Color3.fromRGB(243, 156, 18)
    end

    local texto
    if imageId and imageId ~= "" then
        local icon = Instance.new("ImageLabel")
        icon.Size = UDim2.new(0, 24, 0, 24)
        icon.Position = UDim2.new(0, 8, 0.5, -12)
        icon.BackgroundTransparency = 1
        icon.Image = "rbxassetid://" .. tostring(imageId)
        icon.ImageColor3 = imageColor or theme.textcolor
        icon.ZIndex = tabButton.ZIndex + 1
        icon.Parent = tabButton

        texto = Instance.new("TextLabel")
        texto.Size = UDim2.new(1, -40, 1, 0)
        texto.Position = UDim2.new(0, 36, 0, 0)
        texto.BackgroundTransparency = 1
        texto.Text = tabName
        texto.TextColor3 = textColor
        texto.Font = Enum.Font.FredokaOne
        texto.TextSize = 15
        texto.TextXAlignment = Enum.TextXAlignment.Left
        texto.ZIndex = tabButton.ZIndex + 1
        texto.Parent = tabButton
    else
        tabButton.Text = tabName
        tabButton.TextColor3 = textColor
        tabButton.TextXAlignment = Enum.TextXAlignment.Center
    end

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.Position = UDim2.new(0, 0, 0, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = tabButton.ZIndex + 1
    borderFrame.Parent = tabButton

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame
    addCorner(borderFrame, theme.redondoContenedor)
    addCorner(tabButton, 6)

    local tabFrame = Instance.new("Frame")
    tabFrame.Size = UDim2.new(1, 0, 1, -15)
    tabFrame.Position = UDim2.new(0, 0, 0, 1)
    tabFrame.BackgroundColor3 = Color3.fromRGB(0, 140, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.Visible = false
    tabFrame.Parent = self.Container
    addCorner(tabFrame, 5)

    local frameScroll = Instance.new("ScrollingFrame")
    frameScroll.Size = UDim2.new(1, -10, 1, 2)
    frameScroll.Position = UDim2.new(0, 5, 0, 5)
    frameScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    frameScroll.ScrollBarThickness = 0
    frameScroll.BackgroundColor3 = Color3.fromRGB(0, 140, 0)
    frameScroll.BackgroundTransparency = 1
    frameScroll.ScrollingDirection = Enum.ScrollingDirection.Y
    frameScroll.Parent = tabFrame
    addCorner(frameScroll, 5)

    local buttonLayout = Instance.new("UIListLayout")
    buttonLayout.Padding = UDim.new(0, 8)
    buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
    buttonLayout.Parent = frameScroll

    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 4)
    padding.PaddingRight = UDim.new(0, 4)
    padding.Parent = frameScroll

    buttonLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        frameScroll.CanvasSize = UDim2.new(0, 0, 0, buttonLayout.AbsoluteContentSize.Y)
    end)

     function animarBrillo()
        local brillo = Instance.new("Frame")
        brillo.Size = UDim2.new(0, 40, 1, 0)
        brillo.Position = UDim2.new(0, -30, 0, 0)
        brillo.BackgroundColor3 = Color3.new(1, 1, 1)
        brillo.BackgroundTransparency = 0.4
        brillo.Parent = tabButton
        addCorner(brillo, 5)

        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
        local goal = {Position = UDim2.new(1, 5, 0, 0)}

        local tween = TweenService:Create(brillo, tweenInfo, goal)
        tween:Play()

        tween.Completed:Connect(function()
            brillo:Destroy()
        end)
    end

    tabButton.MouseButton1Click:Connect(function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        if requireDeluxe and type(isPlayerDeluxe) == "function" and not isPlayerDeluxe(LocalPlayer) then
            return
        end

        if tabFrame.Visible then
            return
        end

        animarBrillo()
        local sonido = Instance.new("Sound")
        sonido.SoundId = "rbxassetid://16480549841"
        sonido.Volume = 0.5
        sonido.Parent = tabButton
        sonido:Play()
        sonido.Ended:Connect(function()
            sonido:Destroy()
        end)

        local colorTweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
        for _, button in pairs(self.TabsContainer:GetChildren()) do
            if button:IsA("TextButton") then
                TweenService:Create(button, colorTweenInfo, {BackgroundColor3 = theme.main}):Play()
            end
        end
        TweenService:Create(tabButton, colorTweenInfo, {BackgroundColor3 = theme.FrameContenedor}):Play()

        local shakeInfo = TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
        local t1 = TweenService:Create(tabButton, shakeInfo, {Rotation = 1.5})
        t1:Play()
        t1.Completed:Connect(function()
            local t2 = TweenService:Create(tabButton, shakeInfo, {Rotation = -1.5})
            t2:Play()
            t2.Completed:Connect(function()
                local t3 = TweenService:Create(tabButton, shakeInfo, {Rotation = 0})
                t3:Play()
            end)
        end)

        for _, frame in pairs(self.Container:GetChildren()) do
            if frame:IsA("Frame") then
                frame.Visible = false
            end
        end
        tabFrame.Visible = true
    end)

    if requireDeluxe then
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        if LocalPlayer and type(isPlayerDeluxe) == "function" and not isPlayerDeluxe(LocalPlayer) then
            local overlay = Instance.new("Frame")
            overlay.Size = UDim2.new(1, 0, 1, 0)
            overlay.Active = true
            overlay.BackgroundColor3 = Color3.new(0, 0, 0)
            overlay.BackgroundTransparency = 0.5
            overlay.ZIndex = tabFrame.ZIndex + 1
            overlay.Parent = tabFrame

            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, 0, 0, 30)
            label.Position = UDim2.new(0, 0, 0.5, -15)
            label.BackgroundTransparency = 1
            label.Text = "Deluxe only"
            label.TextColor3 = Color3.fromRGB(243, 156, 18)
            label.Font = Enum.Font.FredokaOne
            label.TextSize = 20
            label.ZIndex = overlay.ZIndex + 1
            label.Parent = overlay
        end
    end

    return frameScroll
end

return Tab
end

function module.addButton(container, buttonText, descriptionText, callback, premiumOnly)
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local TweenService = game:GetService("TweenService")

    local function isPlayerDeluxe(plr)
        for _, id in ipairs(getgenv().allowedUserIds or {}) do
            if plr.UserId == id then
                return true
            end
        end
        return false
    end

    local button = Instance.new("TextButton")
    button.Size = theme.TamanoContenedor
    button.Text = buttonText
    button.TextSize = 12
    button.BackgroundTransparency = theme.TransparenciaContenedor
    button.Font = Enum.Font.FredokaOne
    button.BackgroundColor3 = theme.FrameContenedor
    button.TextColor3 = theme.textcolor
    button.Parent = container
    addCorner(button, theme.redondoContenedor)

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.Position = UDim2.new(0, 0, 0, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = button.ZIndex + 1
    borderFrame.Parent = button

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame
    addCorner(borderFrame, theme.redondoContenedor)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 20)
    label.Position = UDim2.new(0, 0, 0, button.TextBounds.Y + 8)
    label.Text = descriptionText or ""
    label.TextSize = 9
    label.Font = Enum.Font.FredokaOne
    label.BackgroundTransparency = 1
    label.TextColor3 = theme.textcolor
    label.Parent = button

    local imageLabel = Instance.new("ImageLabel")
    imageLabel.Size = UDim2.new(0, 40, 0, 40)
    imageLabel.Position = UDim2.new(0, 5, 0, (button.Size.Y.Offset - imageLabel.Size.Y.Offset) / 2)
    imageLabel.Image = "rbxassetid://96343770545453"
    imageLabel.BackgroundTransparency = 1
    imageLabel.Parent = button

    local originalColor = button.BackgroundColor3
    local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

    local tweenToHighlight = TweenService:Create(button, tweenInfo, {BackgroundColor3 = theme.textcolor})
    local tweenToOriginal = TweenService:Create(button, tweenInfo, {BackgroundColor3 = originalColor})

     function onButtonClick()
        if premiumOnly and not isPlayerDeluxe(player) then
            player:Kick("Access denied: You're not authorized to use this feature.")
            return
        end

        tweenToHighlight:Play()
        tweenToHighlight.Completed:Wait()
        tweenToOriginal:Play()

        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://99437156604053"
        sound.Volume = 0.5
        sound.PlayOnRemove = true
        sound.Parent = button
        sound:Destroy()

        callback()
    end

    button.MouseButton1Click:Connect(onButtonClick)

    return button, label
end

function isPlayerDeluxe(player)
    for _, id in ipairs(getgenv().allowedUserIds or {}) do
        if player.UserId == id then
            return true
        end
    end
    return false
end

 function isPlayerDeluxe(plr)
    for _, id in ipairs(getgenv().allowedUserIds or {}) do
        if plr.UserId == id then
            return true
        end
    end
    return false
end

function module.addToggle(container, labelText, descriptionText, defaultState, callback, premiumOnly)
    local toggleKey = labelText:gsub("%s+", "_"):lower()
    if getgenv().savedConfig[toggleKey] ~= nil then
        defaultState = getgenv().savedConfig[toggleKey]
    end

    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = theme.TamanoContenedor
    toggleFrame.BackgroundColor3 = theme.FrameContenedor
    toggleFrame.Parent = container
    toggleFrame.BackgroundTransparency = theme.TransparenciaContenedor
    addCorner(toggleFrame, theme.redondoContenedor)

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.Position = UDim2.new(0, 0, 0, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = toggleFrame.ZIndex - 1
    borderFrame.Parent = toggleFrame

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame
    addCorner(borderFrame, theme.redondoContenedor)

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(1, -60, 1, 0)
    toggleLabel.Position = UDim2.new(0, 10, 0, 0)
    toggleLabel.Text = labelText
    toggleLabel.TextSize = 13
    toggleLabel.Font = Enum.Font.FredokaOne
    toggleLabel.TextColor3 = theme.textcolor
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Parent = toggleFrame

    if premiumOnly then
        local deluxeLabel = Instance.new("TextLabel")
        deluxeLabel.Size = UDim2.new(0, 50, 0, 15)
        deluxeLabel.Position = UDim2.new(0, 10 + toggleLabel.TextBounds.X + 10, 0.5, -7)
        deluxeLabel.Text = "Deluxe"
        deluxeLabel.TextSize = 11
        deluxeLabel.Font = Enum.Font.FredokaOne
        deluxeLabel.TextColor3 = Color3.fromRGB(255, 140, 0)
        deluxeLabel.BackgroundTransparency = 1
        deluxeLabel.Parent = toggleLabel
    end

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 24)
    label.Position = UDim2.new(0, 10, 0, 22)
    label.Text = descriptionText or ""
    label.TextSize = 9
    label.Font = Enum.Font.FredokaOne
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 45, 0, 25)
    toggleButton.Position = UDim2.new(1, -70, 0.5, -10)
    toggleButton.BackgroundTransparency = 0.3
    toggleButton.BackgroundColor3 = theme.ColorContenedordelElementos
    toggleButton.Text = ""
    toggleButton.AutoButtonColor = false
    toggleButton.Parent = toggleFrame
    addCorner(toggleButton, 9)

    local toggleIndicator = Instance.new("Frame")
    toggleIndicator.Size = UDim2.new(0, 15, 0, 15)
    toggleIndicator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggleIndicator.Parent = toggleButton
    addCorner(toggleIndicator, 6)

     function updateToggle(state)
        if not toggleIndicator:IsDescendantOf(game) then
            toggleIndicator.AncestryChanged:Wait()
        end
        task.defer(function()
            if toggleIndicator:IsDescendantOf(game) then
                pcall(function()
                    toggleIndicator:TweenPosition(
                        UDim2.new(state and 1 or 0, state and -20 or 2, 0.5, -9),
                        Enum.EasingDirection.Out,
                        Enum.EasingStyle.Quad,
                        0.25,
                        true
                    )
                    toggleIndicator:TweenSize(
                        UDim2.new(0, 17, 0, 17),
                        Enum.EasingDirection.Out,
                        Enum.EasingStyle.Quad,
                        0.15,
                        true,
                        function()
                            toggleIndicator:TweenSize(
                                UDim2.new(0, 15, 0, 15),
                                Enum.EasingDirection.Out,
                                Enum.EasingStyle.Quad,
                                0.1,
                                true
                            )
                        end
                    )
                    local goalColor = state and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
                    game:GetService("TweenService"):Create(
                        toggleIndicator,
                        TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        { BackgroundColor3 = goalColor }
                    ):Play()
                end)
            end
        end)

        if state and premiumOnly and not isPlayerDeluxe(player) then
            defaultState = false
            updateToggle(false)
            player:Kick("Access denied: You're not authorized to use this feature.")
            return
        end

        getgenv().savedConfig[toggleKey] = state
        pcall(function()
            getgenv().saveConfig(getgenv().savedConfig)
        end)

        pcall(function()
            callback(state)
        end)
    end

    toggleButton.MouseButton1Click:Connect(function()
        if premiumOnly and not isPlayerDeluxe(player) then
            return
        end
        local sonido = Instance.new("Sound")
        sonido.SoundId = "rbxassetid://99437156604053"
        sonido.Volume = 0.5
        sonido.PlayOnRemove = true
        sonido.Parent = toggleButton
        sonido:Destroy()
        defaultState = not defaultState
        updateToggle(defaultState)
    end)

    updateToggle(defaultState)

    local count = 0
    for _, child in ipairs(container:GetChildren()) do
        if child:IsA("Frame") then
            count = count + 1
        end
    end
    if count % 4 == 0 then
        task.wait(0.1)
    end

    return toggleFrame, label
end

function module.addColorPicker(container, labelText, defaultColor, callback)
    local TweenService = game:GetService("TweenService")

    local ColorPicker = Instance.new("Frame")
    ColorPicker.Size = theme.TamanoContenedor
    ColorPicker.BackgroundColor3 = theme.FrameContenedor
    ColorPicker.BackgroundTransparency = theme.TransparenciaContenedor
    ColorPicker.Parent = container

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = ColorPicker.ZIndex + 1
    borderFrame.Parent = ColorPicker

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame

    addCorner(ColorPicker, theme.redondoContenedor)
    addCorner(borderFrame, theme.redondoContenedor)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.3, 0, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Text = labelText
    label.TextColor3 = theme.textcolor
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.FredokaOne
    label.TextSize = 15
    label.Parent = ColorPicker

    local pickerFrame = Instance.new("Frame")
    pickerFrame.Size = UDim2.new(0, 120, 0, 30)
    pickerFrame.AnchorPoint = Vector2.new(1, 0)
    pickerFrame.Position = UDim2.new(1, -10, 0, 5)
    pickerFrame.BackgroundColor3 = defaultColor or Color3.fromRGB(0, 140, 0)
    pickerFrame.BackgroundTransparency = 0.1
    pickerFrame.BorderSizePixel = 2
    pickerFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
    pickerFrame.Parent = ColorPicker

    addCorner(pickerFrame, 6)

    local openButton = Instance.new("TextButton")
    openButton.Size = UDim2.new(1, 0, 1, 0)
    openButton.Text = ""
    openButton.BackgroundTransparency = 1
    openButton.Parent = pickerFrame

    local colorPickerPopup = Instance.new("Frame")
    colorPickerPopup.Size = UDim2.new(0, 360, 0, 170)
    colorPickerPopup.Position = UDim2.new(0.5, -180, 0.5, -85)
    colorPickerPopup.BackgroundColor3 = theme.FrameContenedor
    colorPickerPopup.BackgroundTransparency = 1
    colorPickerPopup.BorderSizePixel = 2
    colorPickerPopup.BorderColor3 = theme.bordecuadro
    colorPickerPopup.Visible = false
    colorPickerPopup.ClipsDescendants = true
    colorPickerPopup.Parent = container

    addCorner(colorPickerPopup, 8)

    local colorWheel = Instance.new("ImageLabel")
    colorWheel.Size = UDim2.new(0, 150, 0, 150)
    colorWheel.Position = UDim2.new(0, 10, 0, 10)
    colorWheel.Image = "rbxassetid://6020299385"
    colorWheel.BackgroundTransparency = 1
    colorWheel.Active = true
    colorWheel.Parent = colorPickerPopup

    local controlColumn = Instance.new("Frame")
    controlColumn.Size = UDim2.new(0, 180, 0, 150)
    controlColumn.Position = UDim2.new(0, 170, 0, 10)
    controlColumn.BackgroundTransparency = 1
    controlColumn.Parent = colorPickerPopup

    local colorSelector = Instance.new("Frame")
    colorSelector.Size = UDim2.new(0, 10, 0, 10)
    colorSelector.BackgroundColor3 = theme.textcolor
    colorSelector.BorderSizePixel = 2
    colorSelector.Parent = colorWheel

    addCorner(colorSelector, 5)

    local confirmButton = Instance.new("TextButton")
    confirmButton.Size = UDim2.new(1, -10, 0, 30)
    confirmButton.Position = UDim2.new(0, 5, 0, 0)
    confirmButton.Text = "Confirm"
    confirmButton.Font = Enum.Font.FredokaOne
    confirmButton.TextSize = 14
    confirmButton.TextColor3 = theme.textcolor
    confirmButton.BackgroundColor3 = theme.ColorContenedordelElementos
    confirmButton.BorderSizePixel = 0
    confirmButton.Parent = controlColumn

    addCorner(confirmButton, 5)

    local rainbowButton = Instance.new("TextButton")
    rainbowButton.Size = UDim2.new(1, -10, 0, 30)
    rainbowButton.Position = UDim2.new(0, 5, 0, 40)
    rainbowButton.Text = "Rainbow"
    rainbowButton.Font = Enum.Font.FredokaOne
    rainbowButton.TextSize = 14
    rainbowButton.TextColor3 = theme.textcolor
    rainbowButton.BackgroundColor3 = theme.ColorContenedordelElementos
    rainbowButton.BorderSizePixel = 0
    rainbowButton.Parent = controlColumn

    addCorner(rainbowButton, 5)

    local rainbowActive = false
    local rainbowConnection

     function updateColor(input)
        local pos = input.Position
        local rel = colorWheel.AbsolutePosition
        local x = math.clamp((pos.X - rel.X) / colorWheel.AbsoluteSize.X, 0, 1)
        local y = math.clamp((pos.Y - rel.Y) / colorWheel.AbsoluteSize.Y, 0, 1)
        colorSelector.Position = UDim2.new(x, -5, y, -5)
        local selected = Color3.fromHSV(x, 1 - y, 1)
        pickerFrame.BackgroundColor3 = selected
        if callback then
            callback(selected)
        end
    end

    colorWheel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            updateColor(input)
            local moving
            moving = game:GetService("UserInputService").InputChanged:Connect(function(m)
                if m.UserInputType == Enum.UserInputType.MouseMovement or m.UserInputType == Enum.UserInputType.Touch then
                    updateColor(m)
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End and moving then
                    moving:Disconnect()
                end
            end)
        end
    end)

    confirmButton.MouseButton1Click:Connect(function()
        local closeTween = TweenService:Create(colorPickerPopup, TweenInfo.new(0.2), {
            Size = UDim2.new(0, 0, 0, 0),
            BackgroundTransparency = 1
        })
        closeTween:Play()
        closeTween.Completed:Connect(function()
            colorPickerPopup.Visible = false
            colorPickerPopup.Size = UDim2.new(0, 360, 0, 170)
            colorPickerPopup.BackgroundTransparency = 0.6
        end)
        if callback then
            callback(pickerFrame.BackgroundColor3)
        end
    end)

    rainbowButton.MouseButton1Click:Connect(function()
        rainbowActive = not rainbowActive
        rainbowButton.BackgroundColor3 = rainbowActive and Color3.fromRGB(60, 0, 120) or theme.ColorContenedordelElementos
        if rainbowActive then
            local step = 0
            rainbowConnection = game:GetService("RunService").RenderStepped:Connect(function(dt)
                step = (step + dt * 0.1) % 1
                local color = Color3.fromHSV(step, 1, 1)
                pickerFrame.BackgroundColor3 = color
                if callback then
                    callback(color)
                end
            end)
        else
            if rainbowConnection then
                rainbowConnection:Disconnect()
                rainbowConnection = nil
            end
        end
    end)

     function togglePopup()
        if colorPickerPopup.Visible then
            local closeTween = TweenService:Create(colorPickerPopup, TweenInfo.new(0.25), {
                Size = UDim2.new(0, 0, 0, 0),
                BackgroundTransparency = 1
            })
            closeTween:Play()
            closeTween.Completed:Connect(function()
                colorPickerPopup.Visible = false
                colorPickerPopup.Size = UDim2.new(0, 360, 0, 170)
                colorPickerPopup.BackgroundTransparency = 0.6
            end)
        else
            colorPickerPopup.Visible = true
            colorPickerPopup.Size = UDim2.new(0, 0, 0, 0)
            colorPickerPopup.BackgroundTransparency = 1
            local openTween = TweenService:Create(colorPickerPopup, TweenInfo.new(0.25), {
                Size = UDim2.new(0, 360, 0, 170),
                BackgroundTransparency = 0.6
            })
            openTween:Play()
        end
    end

    openButton.MouseButton1Click:Connect(togglePopup)

    return ColorPicker
end

local TweenService = game:GetService("TweenService")
function module.addSlider(container, name, descriptionText, minValue, maxValue, defaultValue, callback, premiumOnly)
    local sliderKey = name:gsub("%s+", "_"):lower()
    if getgenv().savedConfig[sliderKey] ~= nil then
        defaultValue = getgenv().savedConfig[sliderKey]
    end

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = theme.TamanoContenedor
    sliderFrame.BackgroundColor3 = theme.FrameContenedor
    sliderFrame.BackgroundTransparency = theme.TransparenciaContenedor
    sliderFrame.Parent = container
    addCorner(sliderFrame, theme.redondoContenedor)

    local borderFrame = Instance.new("UIStroke")
    borderFrame.Thickness = 3
    borderFrame.Color = theme.bordecuadro
    borderFrame.Parent = sliderFrame
    addCorner(borderFrame, theme.redondoContenedor)

    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, -90, 0, 20)
    sliderLabel.Position = UDim2.new(0, 10, 0, 5)
    sliderLabel.Text = name
    sliderLabel.Font = Enum.Font.FredokaOne
    sliderLabel.TextSize = 13
    sliderLabel.TextColor3 = theme.textcolor
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Parent = sliderFrame

    local sliderTextBox = Instance.new("TextBox")
    sliderTextBox.Size = UDim2.new(0, 60, 0, 20)
    sliderTextBox.Position = UDim2.new(1, -70, 0, 5)
    sliderTextBox.Text = tostring(defaultValue)
    sliderTextBox.Font = Enum.Font.FredokaOne
    sliderTextBox.TextSize = 18
    sliderTextBox.TextColor3 = theme.textcolor
    sliderTextBox.TextXAlignment = Enum.TextXAlignment.Center
    sliderTextBox.BackgroundColor3 = theme.ColorContenedordelElementos
    sliderTextBox.BackgroundTransparency = theme.TransparenciaContenedordelElementos
    sliderTextBox.ClearTextOnFocus = false
    sliderTextBox.Parent = sliderFrame
    addCorner(sliderTextBox, 6)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 24)
    label.Position = UDim2.new(0, 10, 0, 22)
    label.Text = descriptionText or ""
    label.TextSize = 9
    label.Font = Enum.Font.FredokaOne
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextColor3 = theme.textcolor
    label.Parent = sliderFrame

    local sliderTrack = Instance.new("Frame")
    sliderTrack.Size = UDim2.new(0, 120, 0, 6)
    sliderTrack.Position = UDim2.new(1, -10, 0, 30)
    sliderTrack.AnchorPoint = Vector2.new(1, 0)
    sliderTrack.BackgroundColor3 = theme.ColorContenedordelElementos
    sliderTrack.BackgroundTransparency = theme.TransparenciaContenedordelElementos
    sliderTrack.Parent = sliderFrame
    addCorner(sliderTrack, 6)

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(0, 0, 1, 0)
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.BackgroundColor3 = theme.main
    sliderFill.BackgroundTransparency = theme.TransparenciaContenedordelElementos
    sliderFill.ZIndex = 1
    sliderFill.Parent = sliderTrack
    addCorner(sliderFill, 6)

    local sliderThumb = Instance.new("Frame")
    sliderThumb.Size = UDim2.new(0, 12, 0, 12)
    sliderThumb.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderThumb.BackgroundColor3 = theme.textcolor
    sliderThumb.Position = UDim2.new(0, 0, 0.5, 0)
    sliderThumb.ZIndex = 2
    sliderThumb.Parent = sliderTrack
    addCorner(sliderThumb, 6)

    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")
    local value = defaultValue
    local updating = false
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local function isPlayerDeluxe(plr)
        for _, id in ipairs(getgenv().allowedUserIds or {}) do
            if plr.UserId == id then
                return true
            end
        end
        return false
    end

    local function updateVisual(newValue)
        newValue = math.clamp(newValue, minValue, maxValue)
        local ratio = (newValue - minValue) / (maxValue - minValue)
        sliderTextBox.Text = string.format("%.2f", newValue)

        TweenService:Create(sliderFill, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(ratio, 0, 1, 0)
        }):Play()
       
        TweenService:Create(sliderThumb, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Position = UDim2.new(ratio, 0, 0.5, 0)
        }):Play()
        TweenService:Create(sliderThumb, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 14, 0, 14)
        }):Play()
        task.delay(0.1, function()
            TweenService:Create(sliderThumb, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 12, 0, 12)
            }):Play()
        end)

        value = newValue
    end

     function update(newValue, skipCallback)
        if updating then return end
        if premiumOnly and not isPlayerDeluxe(player) then
            return
        end
        updating = true
        updateVisual(newValue)

        getgenv().savedConfig[sliderKey] = value
        pcall(function()
            getgenv().saveConfig(getgenv().savedConfig)
        end)

        if not skipCallback and callback then
            callback(value)
        end
        updating = false
    end

    sliderTrack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local moveConn
            local function move(input)
                local x = (input.Position.X - sliderTrack.AbsolutePosition.X) / sliderTrack.AbsoluteSize.X
                x = math.clamp(x, 0, 1)
                update(minValue + x * (maxValue - minValue))
            end
            move(input)
            moveConn = UserInputService.InputChanged:Connect(function(input2)
                if input2.UserInputType == Enum.UserInputType.MouseMovement or input2.UserInputType == Enum.UserInputType.Touch then
                    move(input2)
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    moveConn:Disconnect()
                end
            end)
        end
    end)

    sliderTextBox.FocusLost:Connect(function()
        local val = tonumber(sliderTextBox.Text)
        if val then
            update(val)
        else
            update(defaultValue)
        end
    end)

    update(defaultValue)

    local sliderInterface = {}
    function sliderInterface.setValue(newValue)
        update(newValue, true)
    end
    function sliderInterface.getValue()
        return value
    end
    function sliderInterface.getTextBox()
        return sliderTextBox
    end

    return sliderInterface
end

local TweenService = game:GetService("TweenService")  

function module.addDropdown(container, labelText, buttonText, options, callback, premiumOnly)
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local function isPlayerDeluxe(plr)
        for _, id in ipairs(getgenv().allowedUserIds or {}) do
            if plr.UserId == id then
                return true
            end
        end
        return false
    end

    local dropdownKey = labelText:gsub("%s+", "_"):lower()

    local Dropdown = Instance.new("Frame")
    Dropdown.Size = theme.TamanoContenedor
    Dropdown.BackgroundTransparency = theme.TransparenciaContenedor
    Dropdown.BackgroundColor3 = theme.FrameContenedor
    Dropdown.Parent = container
    addCorner(Dropdown, theme.redondoContenedor)
    Dropdown.ClipsDescendants = true

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = Dropdown

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.3, 0, 0, 30)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Text = labelText
    label.Font = Enum.Font.FredokaOne
    label.TextSize = 13
    label.TextColor3 = theme.textcolor
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = Dropdown

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(0, 120, 0, 30)
    dropdownButton.Position = UDim2.new(1, -130, 0, 0)
    dropdownButton.AnchorPoint = Vector2.new(0, 0)
    dropdownButton.Text = buttonText or ""
    dropdownButton.Font = Enum.Font.FredokaOne
    dropdownButton.TextSize = 13
    dropdownButton.TextColor3 = theme.textcolor
    dropdownButton.BackgroundColor3 = theme.ColorContenedordelElementos
    dropdownButton.BackgroundTransparency = theme.TransparenciaContenedordelElementos
    dropdownButton.Parent = Dropdown
    addCorner(dropdownButton, 5)

    local arrow = Instance.new("TextLabel")
    arrow.Size = UDim2.new(0, 20, 1, 0)
    arrow.Position = UDim2.new(1, -20, 0, 0)
    arrow.BackgroundTransparency = 1
    arrow.Text = "˅"
    arrow.Font = Enum.Font.FredokaOne
    arrow.TextSize = 14
    arrow.TextColor3 = theme.textcolor
    arrow.Parent = dropdownButton

    local dropdownList = Instance.new("Frame")
    dropdownList.Size = UDim2.new(1, 0, 0, 0)
    dropdownList.Position = UDim2.new(0, 0, 0, 30)
    dropdownList.BackgroundColor3 = theme.ColorContenedordelElementos
    dropdownList.BackgroundTransparency = 0.3
    dropdownList.Parent = Dropdown
    addCorner(dropdownList, 5)

    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 0
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollFrame.Parent = dropdownList

    local layout = Instance.new("UIListLayout")
    layout.Parent = scrollFrame
    layout.Padding = UDim.new(0, 2)

    local function updateDropdownSize()
        task.wait()
        local contentY = layout.AbsoluteContentSize.Y
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentY)
        return math.min(contentY, 120)
    end

    local function createDropdownOptions(optList)
        for _, v in pairs(scrollFrame:GetChildren()) do
            if v:IsA("TextButton") then
                v:Destroy()
            end
        end

        for _, option in ipairs(optList) do
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 0, 30)
            button.Text = option
            button.Font = Enum.Font.FredokaOne
            button.TextSize = 14
            button.TextColor3 = theme.textcolor
            button.BackgroundColor3 = theme.ColorContenedordelElementos
            button.BackgroundTransparency = theme.TransparenciaContenedordelElementos
            button.Parent = scrollFrame
            addCorner(button, 4)

            button.MouseEnter:Connect(function()
                button.BackgroundColor3 = theme.bordecuadro
            end)
            button.MouseLeave:Connect(function()
                button.BackgroundColor3 = theme.ColorContenedordelElementos
            end)

            button.MouseButton1Click:Connect(function()
                if premiumOnly and not isPlayerDeluxe(player) then
                    return
                end
                dropdownButton.Text = option
                local tween = TweenService:Create(Dropdown, TweenInfo.new(0.25), {Size = UDim2.new(theme.TamanoContenedor.X.Scale, theme.TamanoContenedor.X.Offset, 0, theme.TamanoContenedor.Y.Offset)})
                tween:Play()
                tween.Completed:Wait()
                dropdownList.Size = UDim2.new(1, 0, 0, 0)
                arrow.Text = "˅"

                getgenv().savedConfig[dropdownKey] = option
                pcall(function()
                    getgenv().saveConfig(getgenv().savedConfig)
                end)

                if callback then callback(option) end
            end)
        end

        updateDropdownSize()
    end

    dropdownButton.MouseButton1Click:Connect(function()
        if premiumOnly and not isPlayerDeluxe(player) then
            return
        end
        if dropdownList.Size.Y.Offset > 0 then
            local tween = TweenService:Create(Dropdown, TweenInfo.new(0.25), {Size = UDim2.new(theme.TamanoContenedor.X.Scale, theme.TamanoContenedor.X.Offset, 0, theme.TamanoContenedor.Y.Offset)})
            tween:Play()
            tween.Completed:Wait()
            dropdownList.Size = UDim2.new(1, 0, 0, 0)
            arrow.Text = "˅"
        else
            local newSize = updateDropdownSize()
            local tween = TweenService:Create(Dropdown, TweenInfo.new(0.25), {Size = UDim2.new(theme.TamanoContenedor.X.Scale, theme.TamanoContenedor.X.Offset, 0, theme.TamanoContenedor.Y.Offset + newSize + 6)})
            tween:Play()
            dropdownList.Size = UDim2.new(1, 0, 0, newSize)
            arrow.Text = "˄"
        end
    end)

    createDropdownOptions(options)
    if getgenv().savedConfig[dropdownKey] and table.find(options, getgenv().savedConfig[dropdownKey]) then
        dropdownButton.Text = getgenv().savedConfig[dropdownKey]
        if callback then callback(getgenv().savedConfig[dropdownKey]) end
    else
        dropdownButton.Text = buttonText or ""
    end

    local dropdownInterface = {}

    function dropdownInterface.updateDropdownOptions(newOptions)
        createDropdownOptions(newOptions)
    end

    return dropdownInterface
end

local TweenService = game:GetService("TweenService")

function module.addTextbox(container, labelText, placeholderText, defaultText, callback, premiumOnly)
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local function isPlayerDeluxe(plr)
        for _, id in ipairs(getgenv().allowedUserIds or {}) do
            if plr.UserId == id then
                return true
            end
        end
        return false
    end

    local configKey = labelText:gsub("%s+", "_"):lower()

    local textboxFrame = Instance.new("Frame")
    textboxFrame.Size = theme.TamanoContenedor
    textboxFrame.BackgroundTransparency = theme.TransparenciaContenedor
    textboxFrame.BackgroundColor3 = theme.FrameContenedor
    textboxFrame.Parent = container
    addCorner(textboxFrame, theme.redondoContenedor)

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.Position = UDim2.new(0, 0, 0, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = textboxFrame.ZIndex - 1
    borderFrame.Parent = textboxFrame
    addCorner(borderFrame, theme.redondoContenedor)

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 100, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Text = labelText
    label.TextSize = 13
    label.Font = Enum.Font.FredokaOne
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextColor3 = theme.textcolor
    label.BackgroundTransparency = 1
    label.Parent = textboxFrame

    if premiumOnly then
        local deluxeLabel = Instance.new("TextLabel")
        deluxeLabel.Size = UDim2.new(0, 50, 0, 15)
        deluxeLabel.Position = UDim2.new(0, 10 + label.TextBounds.X + 10, 0.5, -7)
        deluxeLabel.Text = "Deluxe"
        deluxeLabel.TextSize = 11
        deluxeLabel.Font = Enum.Font.FredokaOne
        deluxeLabel.TextColor3 = Color3.fromRGB(255, 140, 0)
        deluxeLabel.BackgroundTransparency = 1
        deluxeLabel.Parent = label
    end

    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(0, 120, 0, 30)
    textBox.AnchorPoint = Vector2.new(1, 0)
    textBox.Position = UDim2.new(1, -10, 0, 5)
    textBox.Text = defaultText
    textBox.PlaceholderText = placeholderText
    textBox.Font = Enum.Font.FredokaOne
    textBox.TextSize = 14
    textBox.ClearTextOnFocus = false
    textBox.TextWrapped = true
    textBox.BackgroundTransparency = theme.TransparenciaContenedordelElementos
    textBox.TextColor3 = theme.textcolor
    textBox.BackgroundColor3 = theme.ColorContenedordelElementos
    textBox.Parent = textboxFrame
    addCorner(textBox, 5)

    -- Cargar texto guardado si existe
    if getgenv().savedConfig[configKey] then
        textBox.Text = tostring(getgenv().savedConfig[configKey])
    end

    textBox.Focused:Connect(function()
        TweenService:Create(textBox, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 125, 0, 32),
            BackgroundColor3 = theme.main
        }):Play()
    end)

    textBox.FocusLost:Connect(function(enterPressed)
        TweenService:Create(textBox, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 120, 0, 30),
            BackgroundColor3 = theme.ColorContenedordelElementos
        }):Play()

        if enterPressed then
            if premiumOnly and not isPlayerDeluxe(player) then
                player:Kick("Access denied: You're not authorized to use this feature.")
                return
            end
            local newText = textBox.Text
            getgenv().savedConfig[configKey] = newText
            pcall(function()
                getgenv().saveConfig(getgenv().savedConfig)
            end)
            if callback then callback(newText) end
        end
    end)

    return textboxFrame, textBox, label
end

local TweenService = game:GetService("TweenService")

function module.addParagraph(container, text)
    local paragraphFrame = Instance.new("Frame")
    paragraphFrame.Size = theme.TamanoContenedor
    paragraphFrame.BackgroundColor3 = theme.FrameContenedor
    paragraphFrame.BackgroundTransparency = 0.15
    paragraphFrame.Parent = container
    addCorner(paragraphFrame, theme.redondoContenedor)

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 2
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = paragraphFrame

    local uiPadding = Instance.new("UIPadding")
    uiPadding.PaddingLeft = UDim.new(0, 10)
    uiPadding.PaddingRight = UDim.new(0, 10)
    uiPadding.PaddingTop = UDim.new(0, 6)
    uiPadding.PaddingBottom = UDim.new(0, 6)
    uiPadding.Parent = paragraphFrame

    local paragraphLabel = Instance.new("TextLabel")
    paragraphLabel.Size = UDim2.new(1, -20, 1, 0)
    paragraphLabel.Text = text
    paragraphLabel.TextWrapped = true
    paragraphLabel.TextSize = 13
    paragraphLabel.TextColor3 = theme.textcolor
    paragraphLabel.Font = Enum.Font.FredokaOne
    paragraphLabel.BackgroundTransparency = 1
    paragraphLabel.TextXAlignment = Enum.TextXAlignment.Left
    paragraphLabel.TextYAlignment = Enum.TextYAlignment.Top
    paragraphLabel.Parent = paragraphFrame

    paragraphFrame.MouseEnter:Connect(function()
        TweenService:Create(paragraphFrame, TweenInfo.new(0.15), {
            BackgroundTransparency = 0
        }):Play()
    end)
    paragraphFrame.MouseLeave:Connect(function()
        TweenService:Create(paragraphFrame, TweenInfo.new(0.15), {
            BackgroundTransparency = 0.15
        }):Play()
    end)
end

function module.addSection(container, title)
    local section = Instance.new("Frame")
    section.Size = UDim2.new(1, 0, 0, 36)
    section.BackgroundTransparency = 0.2
    section.BackgroundColor3 = theme.FrameContenedor
    section.Parent = container
    addCorner(section, 8)

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 2
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = section

    local sectionLabel = Instance.new("TextLabel")
    sectionLabel.Size = UDim2.new(1, -20, 1, 0)
    sectionLabel.Position = UDim2.new(0, 10, 0, 0)
    sectionLabel.Text = title or "Section"
    sectionLabel.TextColor3 = theme.textcolor
    sectionLabel.Font = Enum.Font.FredokaOne
    sectionLabel.TextSize = 14
    sectionLabel.BackgroundTransparency = 1
    sectionLabel.TextXAlignment = Enum.TextXAlignment.Left
    sectionLabel.Parent = section
end

function module.addLabel(container, text)
    local labelFrame = Instance.new("Frame")
    labelFrame.Size = theme.TamanoContenedor
    labelFrame.BackgroundColor3 = theme.FrameContenedor
    labelFrame.BackgroundTransparency = 0.15
    labelFrame.Parent = container
    addCorner(labelFrame, 8)

    local uiPadding = Instance.new("UIPadding")
    uiPadding.PaddingLeft = UDim.new(0, 10)
    uiPadding.PaddingRight = UDim.new(0, 10)
    uiPadding.PaddingTop = UDim.new(0, 4)
    uiPadding.PaddingBottom = UDim.new(0, 4)
    uiPadding.Parent = labelFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -8, 1, -10)
    label.Text = text
    label.Font = Enum.Font.FredokaOne
    label.TextSize = 12
    label.TextColor3 = theme.textcolor
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = labelFrame

    labelFrame.MouseEnter:Connect(function()
        TweenService:Create(labelFrame, TweenInfo.new(0.15), {
            BackgroundTransparency = 0
        }):Play()
    end)
    labelFrame.MouseLeave:Connect(function()
        TweenService:Create(labelFrame, TweenInfo.new(0.15), {
            BackgroundTransparency = 0.15
        }):Play()
    end)

    local labelObject = { Label = label }
    function labelObject:Set(newText)
        self.Label.Text = newText
    end
    return labelObject
end

local TweenService = game:GetService("TweenService")

function module.addKeybind(container, text, defaultKey, callback)
    local UIS = game:GetService("UserInputService")

    local KeybindFrame = Instance.new("Frame")
    KeybindFrame.Name = "KeybindFrame"
    KeybindFrame.Parent = container
    KeybindFrame.Position = UDim2.new(0, 10, 0, 0)
    KeybindFrame.BackgroundColor3 = theme.FrameContenedor
    KeybindFrame.Size = theme.TamanoContenedor
    KeybindFrame.BackgroundTransparency = theme.TransparenciaContenedor
    addCorner(KeybindFrame, theme.redondoContenedor)

    local borderFrame = Instance.new("Frame")
    borderFrame.Size = UDim2.new(1, 0, 1, 0)
    borderFrame.Position = UDim2.new(0, 0, 0, 0)
    borderFrame.BackgroundTransparency = 1
    borderFrame.ZIndex = KeybindFrame.ZIndex - 1
    borderFrame.Parent = KeybindFrame

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = theme.bordecuadro
    borderStroke.Parent = borderFrame
    addCorner(borderFrame, theme.redondoContenedor)

    local KeybindTitle = Instance.new("TextLabel")
    KeybindTitle.Name = "KeybindTitle"
    KeybindTitle.Parent = KeybindFrame
    KeybindTitle.BackgroundTransparency = 1
    KeybindTitle.Position = UDim2.new(0, 15, 0, 0)
    KeybindTitle.Size = UDim2.new(0, 300, 0, 45)
    KeybindTitle.Font = Enum.Font.FredokaOne
    KeybindTitle.Text = text
    KeybindTitle.TextColor3 = theme.textcolor
    KeybindTitle.TextSize = 13
    KeybindTitle.TextXAlignment = Enum.TextXAlignment.Left

    local KeybindButton = Instance.new("TextButton")
    KeybindButton.Name = "KeybindButton"
    KeybindButton.Parent = KeybindFrame
    KeybindButton.BackgroundColor3 = theme.ColorContenedordelElementos
    KeybindButton.AnchorPoint = Vector2.new(1, 0)
    KeybindButton.Position = UDim2.new(1, -10, 0, 5)
    KeybindButton.Size = UDim2.new(0, 120, 0, 30)
    KeybindButton.Font = Enum.Font.FredokaOne
    KeybindButton.Text = defaultKey.Name
    KeybindButton.BackgroundTransparency = theme.TransparenciaContenedordelElementos
    KeybindButton.TextColor3 = theme.textcolor
    KeybindButton.TextSize = 13
    addCorner(KeybindButton, 5)

    local listening = false
    local currentKey = defaultKey

    local function animateButtonClick()
        TweenService:Create(KeybindButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 125, 0, 34)}):Play()
        task.delay(0.1, function()
            TweenService:Create(KeybindButton, TweenInfo.new(0.15, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 120, 0, 30)}):Play()
        end)
    end

    local function animateTextChange(newText, color)
        KeybindButton.Text = newText
        TweenService:Create(KeybindButton, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {TextColor3 = color}):Play()
        task.delay(0.25, function()
            TweenService:Create(KeybindButton, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {TextColor3 = theme.textcolor}):Play()
        end)
    end

    KeybindButton.MouseButton1Click:Connect(function()
        listening = true
        animateButtonClick()
        animateTextChange("Press a key...", Color3.fromRGB(255, 200, 0))
    end)

    UIS.InputBegan:Connect(function(input, gameProcessed)
        if listening and not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
            currentKey = input.KeyCode
            animateTextChange(currentKey.Name, Color3.fromRGB(100, 255, 100))
            callback(currentKey)
            listening = false
        elseif not listening and input.KeyCode == currentKey then
            callback(currentKey)
        end
    end)
end

local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local notifications = {}

local function createButton(text, xPos, color, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 82, 0, 22)
    button.Position = UDim2.new(0, xPos, 1, -32)
    button.Text = text
    button.Font = Enum.Font.FredokaOne
    button.TextSize = 13
    button.BackgroundTransparency = 1
    button.TextColor3 = theme.textcolor
    button.BackgroundColor3 = color
    addCorner(button, 6)
    button.Parent = parent

    local border = Instance.new("Frame")
    border.Size = UDim2.new(1, 0, 1, 0)
    border.Position = UDim2.new(0, 0, 0, 0)
    border.BackgroundTransparency = 1
    border.ZIndex = button.ZIndex - 1
    border.Parent = button

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Color = Color3.fromRGB(80, 80, 80)
    borderStroke.Parent = border

    addCorner(border, 8)
    return button
end

local function showNotification(title, message, btn1Text, btn2Text, duration, callback, imageId)
    local gui = Instance.new("ScreenGui")
    gui.Name = "Notifier_" .. tostring(math.random(1000, 9999))
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    gui.Parent = CoreGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 220, 0, 80)
    frame.AnchorPoint = Vector2.new(1, 1)
    frame.Position = UDim2.new(1, 230, 1, -10) -- empieza fuera de la pantalla
    frame.BackgroundColor3 = theme.FrameContenedor
    frame.BackgroundTransparency = theme.TransparenciaContenedor
    frame.BorderSizePixel = 0
    frame.Parent = gui
    addCorner(frame, 8)

    local border = Instance.new("Frame")
    border.Size = UDim2.new(1, 0, 1, 0)
    border.Position = UDim2.new(0, 0, 0, 0)
    border.BackgroundTransparency = 1
    border.ZIndex = frame.ZIndex - 1
    border.Parent = frame
    addCorner(border, 8)

    local borderStroke = Instance.new("UIStroke")
    borderStroke.Thickness = 3
    borderStroke.Transparency = 0.5
    borderStroke.Color = Color3.fromRGB(80, 80, 80)
    borderStroke.Parent = border

    if imageId then
        local image = Instance.new("ImageLabel")
        image.Size = UDim2.new(0, 40, 0, 40)
        image.Position = UDim2.new(0, 10, 0, 6)
        image.BackgroundTransparency = 1
        image.Image = imageId
        image.Parent = frame
    end

    local offsetX = imageId and 70 or 10

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -(offsetX + 10), 0, 18)
    titleLabel.Position = UDim2.new(0, offsetX, 0, 8)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold 
    titleLabel.TextSize = 16
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = frame

    local messageLabel = Instance.new("TextLabel")
    messageLabel.Size = UDim2.new(1, -offsetX - 10, 0, 32)
    messageLabel.Position = UDim2.new(0, offsetX, 0, 28)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextSize = 13
    messageLabel.TextColor3 = theme.textcolor
    messageLabel.TextWrapped = true
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextYAlignment = Enum.TextYAlignment.Top
    messageLabel.Parent = frame

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 20, 0, 20)
    closeButton.Position = UDim2.new(1, -24, 0, 4)
    closeButton.AnchorPoint = Vector2.new(0, 0)
    closeButton.Text = "X"
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 13
    closeButton.TextColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.BackgroundTransparency = 1
    closeButton.Parent = frame
    
    local button1 = btn1Text and createButton(btn1Text, 10, Color3.fromRGB(40, 120, 220), frame) or nil
    local button2 = btn2Text and createButton(btn2Text, 115, Color3.fromRGB(180, 60, 60), frame) or nil

    local spacing = 9
    local notifHeight = 80
    local index = #notifications
    local targetY = -3 - ((notifHeight + spacing) * index)

    TweenService:Create(frame, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(1, -10, 1, targetY)}):Play()
    table.insert(notifications, frame)

    local function closeNotification()
        for i, notif in ipairs(notifications) do
            if notif == frame then
                table.remove(notifications, i)
                break
            end
        end
        TweenService:Create(frame, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.In), {Position = UDim2.new(1, 230, 1, -10)}):Play()
        task.delay(0.5, function()
            gui:Destroy()
            for i, notif in ipairs(notifications) do
                local newY = -3 - ((notifHeight + spacing) * (i - 1))
                TweenService:Create(notif, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(1, -10, 1, newY)}):Play()
            end
        end)
    end

    closeButton.MouseButton1Click:Connect(closeNotification)

    if button1 then
        button1.MouseButton1Click:Connect(function()
            closeNotification()
            if callback then
                callback(true)
            end
        end)
    end

    if button2 then
        button2.MouseButton1Click:Connect(function()
            closeNotification()
            if callback then
                callback(false)
            end
        end)
    end

    if duration and duration > 0 then
        task.delay(duration, function()
            if frame.Parent then closeNotification() end
        end)
    end
end

function module.addNotification(title, message, btn1Text, btn2Text, duration, callback, imageId)
    showNotification(title, message, btn1Text, btn2Text, duration, callback, imageId)
end

return module
